cacti_interface.h:    mem_array * data_array2;
Ucache.cc:      curr_org.data_array2 = (*miter);
Ucache.cc:        curr_org.data_array2 = (*miter);
Ucache.cc:    if (*miter != fin_res->data_array2)
Ucache.cc:    DynamicParameter tag_arr_dyn_p(true, g_ip->pure_ram, g_ip->pure_cam, fin_res->tag_array2->Nspd, fin_res->tag_array2->Ndwl, fin_res->tag_array2->Ndbl, fin_res->tag_array2->Ndcm, fin_res->tag_array2->Ndsam_lev_1, fin_res->tag_array2->Ndsam_lev_2, fin_res->data_array2->wt, g_ip->is_main_mem);
Ucache.cc:  DynamicParameter data_arr_dyn_p(false, g_ip->pure_ram, g_ip->pure_cam, fin_res->data_array2->Nspd, fin_res->data_array2->Ndwl, fin_res->data_array2->Ndbl, fin_res->data_array2->Ndcm, fin_res->data_array2->Ndsam_lev_1, fin_res->data_array2->Ndsam_lev_2, fin_res->data_array2->wt, g_ip->is_main_mem);
Ucache.cc:    fin_res->data_array2->power = data_arr->power;
cacti_interface.cc:  mem_array * data_arr = data_array2;
cacti_interface.cc:    power = data_array2->power + tag_array2->power;
cacti_interface.cc:    power = data_array2->power;
cacti_interface.cc:    cache_ht  = data_array2->height;
cacti_interface.cc:    cache_len = data_array2->width;
cacti_interface.cc:    cache_ht  = MAX(tag_array2->height, data_array2->height);
cacti_interface.cc:    cache_len = tag_array2->width + data_array2->width;
cacti_interface.cc:    if (data_array2->area_efficiency/100.0<0.2)
cacti_interface.cc:    	//area_adjust = sqrt(area/(area*(data_array2->area_efficiency/100.0)/0.2));
cacti_interface.cc:    	area_adjust = sqrt(0.2/(data_array2->area_efficiency/100.0));
cacti_interface.cc:    cycle_time = data_array2->cycle_time;
cacti_interface.cc:                    data_array2->cycle_time);
cacti_interface.cc: data_array2(0)
cacti_interface.cc:	  if (data_array2!=0)
cacti_interface.cc:		  delete data_array2;
io.cc:    file << fin_res.data_array2->Ndwl << ", ";
io.cc:    file << fin_res.data_array2->Ndbl << ", ";
io.cc:    file << fin_res.data_array2->num_row_subarray << ", ";
io.cc:    file << fin_res.data_array2->num_col_subarray << ", ";
io.cc://    file << fin_res.data_array2->multisubbank_interleave_cycle_time*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->delay_request_network*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->delay_inside_mat*1e+9 <<  ", ";
io.cc://    file << fin_res.data_array2.delay_reply_network*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->access_time*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->dram_refresh_period*1e+6 << ", ";
io.cc://    file << fin_res.data_array2->dram_array_availability <<  ", ";
io.cc://    file << fin_res.data_array2->power.readOp.dynamic*1e+9 << ", ";
io.cc:    file << fin_res.data_array2->area *1e-6 << ", ";
io.cc://    file << fin_res.data_array2->Nspd << ", ";
io.cc://    file << fin_res.data_array2->deg_bl_muxing << ", ";
io.cc://    file << fin_res.data_array2->Ndsam_lev_1 << ", ";
io.cc://    file << fin_res.data_array2->Ndsam_lev_2 << ", ";
io.cc:    file << fin_res.data_array2->area_efficiency << ", ";
io.cc:    file << fin_res.data_array2->num_TSV_tot << ", ";
io.cc:    file << fin_res.data_array2->delay_TSV_tot *1e9 << ", ";
io.cc:    file << fin_res.data_array2->area_TSV_tot *1e-6 << ", ";
io.cc:    file << fin_res.data_array2->dyn_pow_TSV_per_access *1e9 << ", ";
io.cc:    file << fin_res.data_array2->t_RCD *1e9 << ", ";
io.cc:    file << fin_res.data_array2->t_RAS *1e9 << ", ";
io.cc:    file << fin_res.data_array2->t_RC *1e9 << ", ";
io.cc:    file << fin_res.data_array2->t_CAS *1e9 << ", ";
io.cc:    file << fin_res.data_array2->t_RP *1e9 << ", ";
io.cc:    file << fin_res.data_array2->activate_energy * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->read_energy * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->write_energy * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->precharge_energy * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->t_RRD * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_row_activate_net * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_row_predecode_driver_and_block * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_row_decoder * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_local_wordline * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_bitlines * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_sense_amp * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_column_access_net * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_column_predecoder * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_column_decoder * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_column_selectline * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_datapath_net * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_global_data * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_local_data_and_drv * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_data_buffer * 1e9 << ", " ;
io.cc:    file << fin_res.data_array2->delay_subarray_output_driver * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_row_activate_net * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_row_predecode_driver_and_block * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_row_decoder * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_local_wordline * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_bitlines * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_sense_amp * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_column_access_net * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_column_predecoder * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_column_decoder * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_column_selectline * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_datapath_net * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_global_data * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_local_data_and_drv * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_subarray_output_driver * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->energy_data_buffer * 1e9 << ", " ;
io.cc:	file << fin_res.data_array2->area_subarray / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_lwl_drv / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_row_predec_dec / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_col_predec_dec / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_bus / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_address_bus / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_data_bus / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_data_drv / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_IOSA / 1e6 << ", " ;
io.cc:	file << fin_res.data_array2->area_sense_amp / 1e6 << ", " ;
io.cc://    file << fin_res.data_array2->multisubbank_interleave_cycle_time*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->delay_request_network*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->delay_inside_mat*1e+9 <<  ", ";
io.cc://    file << fin_res.data_array2.delay_reply_network*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->access_time*1e+9 << ", ";
io.cc://    file << fin_res.data_array2->dram_refresh_period*1e+6 << ", ";
io.cc://    file << fin_res.data_array2->dram_array_availability <<  ", ";
io.cc://    file << fin_res.data_array2->power.readOp.dynamic*1e+9 << ", ";
io.cc:    file << fin_res.data_array2->Ndwl << ", ";
io.cc:    file << fin_res.data_array2->Ndbl << ", ";
io.cc:    file << fin_res.data_array2->Nspd << ", ";
io.cc:    file << fin_res.data_array2->deg_bl_muxing << ", ";
io.cc:    file << fin_res.data_array2->Ndsam_lev_1 << ", ";
io.cc:    file << fin_res.data_array2->Ndsam_lev_2 << ", ";
io.cc:    file << fin_res.data_array2->area_efficiency << ", ";
io.cc:		cout << "	Best Ndwl: " << fr->data_array2->Ndwl << endl;
io.cc:		cout << "	Best Ndbl: " << fr->data_array2->Ndbl << endl;
io.cc:		cout << "	# rows in subarray: " << fr->data_array2->num_row_subarray << endl;
io.cc:		cout << "	# columns in subarray: " << fr->data_array2->num_col_subarray << endl;
io.cc:	    cout<<"	   t_RCD (Row to column command delay): "<< fr->data_array2->t_RCD * 1e9 << " ns" <<endl;
io.cc:		cout<<"	   t_RAS (Row access strobe latency): "<< fr->data_array2->t_RAS * 1e9  << " ns" <<endl;
io.cc:		cout<<"	   t_RC (Row cycle): "<< fr->data_array2->t_RC * 1e9  << " ns" <<endl;
io.cc:		cout<<"	   t_CAS (Column access strobe latency): "<< fr->data_array2->t_CAS * 1e9  << " ns" <<endl;
io.cc:		cout<<"	   t_RP (Row precharge latency): "<< fr->data_array2->t_RP* 1e9  << " ns" <<endl;
io.cc:		//cout<<"	   t_RRD (Rank to rank latency): "<< fr->data_array2->t_RRD* 1e9  << " ns" <<endl;
io.cc:		cout<<"	   t_RRD (Row activation to row activation delay): "<< fr->data_array2->t_RRD * 1e9 << " ns"<<endl;
io.cc:		cout<<"	   Activation energy: "<< fr->data_array2->activate_energy * 1e9  << " nJ" <<endl;
io.cc:		cout<<"	   Read energy: "<< fr->data_array2->read_energy * 1e9  << " nJ" <<endl;
io.cc:		cout<<"	   Write energy: "<< fr->data_array2->write_energy * 1e9  << " nJ" <<endl;
io.cc:		cout<<"	   Precharge energy: "<< fr->data_array2->precharge_energy * 1e9  << " nJ" <<endl;
io.cc:		//cout<<"	Activation power: "<<  fr->data_array2->activate_power * 1e3   << " mW" <<endl;
io.cc:		//cout<<"	Read power: "<<  fr->data_array2->read_power * 1e3 << " mW" <<endl;
io.cc:		//cout<<"	Write power: "<<  fr->data_array2->write_power * 1e3  << " mW" <<endl;
io.cc:		//cout<<"	DRAM+peri Area: "<< fr->data_array2->area/1e6<<" mm2"<<endl;
io.cc:		//double DRAM_area_per_die = (g_ip->partition_gran>0) ? fr->data_array2->area : (fr->data_array2->area/0.5);
io.cc:		double DRAM_area_per_die = (g_ip->partition_gran>0) ? fr->data_array2->area : (fr->data_array2->area + fr->data_array2->area_ram_cells*0.65);
io.cc:		//double DRAM_area_per_die = (g_ip->partition_gran>0) ? fr->data_array2->area : (fr->data_array2->area + 2.5e9*(double)(g_ip->F_sz_um)*(g_ip->F_sz_um));
io.cc:		double area_efficiency_per_die = (g_ip->partition_gran>0) ? fr->data_array2->area_efficiency : (fr->data_array2->area_ram_cells / DRAM_area_per_die *100);
io.cc:		double DRAM_width = (g_ip->partition_gran>0) ? fr->data_array2->all_banks_width : (fr->data_array2->all_banks_width + (DRAM_area_per_die-fr->data_array2->area)/fr->data_array2->all_banks_height);
io.cc:		cout<<"	   DRAM core area: "<< fr->data_array2->area/1e6 <<" mm2"<<endl;
io.cc:		cout<<"	   DRAM die height: "<< fr->data_array2->all_banks_height/1e3 <<" mm"<<endl;
io.cc:			cout<<"	   TSV area overhead: "<< fr->data_array2->area_TSV_tot /1e6 <<" mm2"<<endl;
io.cc:			cout<<"	   TSV latency overhead: "<< fr->data_array2->delay_TSV_tot * 1e9 <<" ns"<<endl;
io.cc:			cout<<"	   TSV energy overhead per access: "<< fr->data_array2->dyn_pow_TSV_per_access * 1e9 <<" nJ"<<endl;
io.cc:    cout << "    Precharge Delay (ns): " << fr->data_array2->precharge_delay*1e9 << endl;
io.cc:    cout << "    Activate Energy (nJ): " << fr->data_array2->activate_energy*1e9 << endl;
io.cc:    cout << "    Read Energy (nJ): " << fr->data_array2->read_energy*1e9 << endl;
io.cc:    cout << "    Write Energy (nJ): " << fr->data_array2->write_energy*1e9 << endl;
io.cc:    cout << "    Precharge Energy (nJ): " << fr->data_array2->precharge_energy*1e9 << endl;
io.cc:    cout << "    Leakage Power Closed Page (mW): " << fr->data_array2->leak_power_subbank_closed_page*1e3 << endl;
io.cc:    cout << "    Leakage Power Open Page (mW): " << fr->data_array2->leak_power_subbank_open_page*1e3 << endl;
io.cc:    cout << "    Leakage Power I/O (mW): " << fr->data_array2->leak_power_request_and_reply_networks*1e3 << endl;
io.cc:      fr->data_array2->refresh_power*1e3 << endl;
io.cc:  cout << "    Best Ndwl : " << fr->data_array2->Ndwl << endl;
io.cc:  cout << "    Best Ndbl : " << fr->data_array2->Ndbl << endl;
io.cc:  cout << "    Best Nspd : " << fr->data_array2->Nspd << endl;
io.cc:  cout << "    Best Ndcm : " << fr->data_array2->deg_bl_muxing << endl;
io.cc:  cout << "    Best Ndsam L1 : " << fr->data_array2->Ndsam_lev_1 << endl;
io.cc:  cout << "    Best Ndsam L2 : " << fr->data_array2->Ndsam_lev_2 << endl << endl;
io.cc:  switch (fr->data_array2->wt) {
io.cc:      cout << "ERROR - Unknown wire type " << (int) fr->data_array2->wt <<endl;
io.cc:		  cout << "\t row activation bus delay (ns): "  << fr->data_array2->delay_row_activate_net*1e9 << endl;
io.cc:		  cout << "\t row predecoder delay (ns): "  << fr->data_array2->delay_row_predecode_driver_and_block*1e9 << endl;
io.cc:		  cout << "\t row decoder delay (ns): "  << fr->data_array2->delay_row_decoder*1e9 << endl;
io.cc:		  cout << "\t local wordline delay (ns): "  << fr->data_array2->delay_local_wordline*1e9 << endl;
io.cc:		  cout << "\t bitline delay (ns): "  << fr->data_array2->delay_bitlines*1e9 << endl;
io.cc:		  cout << "\t sense amp delay (ns): "  << fr->data_array2->delay_sense_amp*1e9 << endl;
io.cc:		  cout << "\t column access bus delay (ns): "  << fr->data_array2->delay_column_access_net*1e9 << endl;
io.cc:		  cout << "\t column predecoder delay (ns): "  << fr->data_array2->delay_column_predecoder*1e9 << endl;
io.cc:		  cout << "\t column decoder delay (ns): "  << fr->data_array2->delay_column_decoder*1e9 << endl;
io.cc:		  //cout << "\t column selectline delay (ns): "  << fr->data_array2->delay_column_selectline*1e9 << endl;
io.cc:		  cout << "\t datapath bus delay (ns): "  << fr->data_array2->delay_datapath_net*1e9 << endl;
io.cc:		  cout << "\t global dataline delay (ns): "  << fr->data_array2->delay_global_data*1e9 << endl;
io.cc:		  cout << "\t local dataline delay (ns): "  << fr->data_array2->delay_local_data_and_drv*1e9 << endl;
io.cc:		  cout << "\t data buffer delay (ns): "  << fr->data_array2->delay_data_buffer*1e9 << endl;
io.cc:		  cout << "\t subarray output driver delay (ns): "  << fr->data_array2->delay_subarray_output_driver*1e9 << endl;
io.cc:		  cout << "\t row activation bus energy (nJ): "  << fr->data_array2->energy_row_activate_net*1e9 << endl;
io.cc:		  cout << "\t row predecoder energy (nJ): "  << fr->data_array2->energy_row_predecode_driver_and_block*1e9 << endl;
io.cc:		  cout << "\t row decoder energy (nJ): "  << fr->data_array2->energy_row_decoder*1e9 << endl;
io.cc:		  cout << "\t local wordline energy (nJ): "  << fr->data_array2->energy_local_wordline*1e9 << endl;
io.cc:		  cout << "\t bitline energy (nJ): "  << fr->data_array2->energy_bitlines*1e9 << endl;
io.cc:		  cout << "\t sense amp energy (nJ): "  << fr->data_array2->energy_sense_amp*1e9 << endl;
io.cc:		  cout << "\t column access bus energy (nJ): "  << fr->data_array2->energy_column_access_net*1e9 << endl;
io.cc:		  cout << "\t column predecoder energy (nJ): "  << fr->data_array2->energy_column_predecoder*1e9 << endl;
io.cc:		  cout << "\t column decoder energy (nJ): "  << fr->data_array2->energy_column_decoder*1e9 << endl;
io.cc:		  cout << "\t column selectline energy (nJ): "  << fr->data_array2->energy_column_selectline*1e9 << endl;
io.cc:		  cout << "\t datapath bus energy (nJ): "  << fr->data_array2->energy_datapath_net*1e9 << endl;
io.cc:		  cout << "\t global dataline energy (nJ): "  << fr->data_array2->energy_global_data*1e9 << endl;
io.cc:		  cout << "\t local dataline energy (nJ): "  << fr->data_array2->energy_local_data_and_drv*1e9 << endl;
io.cc:		  cout << "\t data buffer energy (nJ): "  << fr->data_array2->energy_subarray_output_driver*1e9 << endl;
io.cc:		  //cout << "\t subarray output driver energy (nJ): "  << fr->data_array2->energy_data_buffer*1e9 << endl;
io.cc:		  //cout << "\t subarray area (mm2): "  << fr->data_array2->area_subarray/1e6 << endl;
io.cc:		  cout << "\t DRAM cell area (mm2): "  << fr->data_array2->area_ram_cells/1e6 << endl;
io.cc:		  cout << "\t local WL driver area (mm2): "  << fr->data_array2->area_lwl_drv/1e6 << endl;
io.cc:		  cout << "\t subarray sense amp area (mm2): "  << fr->data_array2->area_sense_amp/1e6 << endl;
io.cc:		  cout << "\t row predecoder/decoder area (mm2): "  << fr->data_array2->area_row_predec_dec/1e6 << endl;
io.cc:		  cout << "\t column predecoder/decoder area (mm2): "  << fr->data_array2->area_col_predec_dec/1e6 << endl;
io.cc:		  cout << "\t center stripe bus area (mm2): "  << fr->data_array2->area_bus/1e6 << endl;
io.cc:		  cout << "\t address bus area (mm2): "  << fr->data_array2->area_address_bus/1e6 << endl;
io.cc:		  cout << "\t data bus area (mm2): "  << fr->data_array2->area_data_bus/1e6 << endl;
io.cc:		  cout << "\t data driver area (mm2): "  << fr->data_array2->area_data_drv/1e6 << endl;
io.cc:		  cout << "\t IO secondary sense amp area (mm2): "  << fr->data_array2->area_IOSA/1e6 << endl;
io.cc:		  cout << "\t TSV area (mm2): "<< fr->data_array2->area_TSV_tot /1e6 << endl;
io.cc:		  fr->data_array2->sram_sleep_tx_width << endl;
io.cc:		  //      fr->data_array2->sram_sleep_tx_width << endl;
io.cc:		  fr->data_array2->sram_sleep_tx_area*1e-6 << endl;
io.cc:		  fr->data_array2->sram_sleep_wakeup_latency*1e9 << endl;
io.cc:		  fr->data_array2->sram_sleep_wakeup_energy*1e9 << endl;
io.cc:		  fr->data_array2->wl_sleep_tx_width << endl;
io.cc:		  //      fr->data_array2->wl_sleep_tx_width << endl;
io.cc:		  fr->data_array2->wl_sleep_tx_area*1e-6 << endl;
io.cc:		  fr->data_array2->wl_sleep_wakeup_latency*1e9 << endl;
io.cc:		  fr->data_array2->wl_sleep_wakeup_energy*1e9 << endl;
io.cc:		  fr->data_array2->bl_floating_wakeup_latency*1e9 << endl;
io.cc:		  fr->data_array2->bl_floating_wakeup_energy*1e9 << endl;
io.cc:		  cout <<  "\t Active mats per access - " << fr->data_array2->num_active_mats<<endl;
io.cc:		  cout <<  "\t Active subarrays per mat - " << fr->data_array2->num_submarray_mats<<endl;
io.cc:      fr->data_array2->access_time/1e-9 << endl;
io.cc:      fr->data_array2->delay_route_to_bank * 1e9 +
io.cc:      fr->data_array2->delay_input_htree * 1e9 << endl;
io.cc:        fr->data_array2->delay_row_predecode_driver_and_block * 1e9 +
io.cc:        fr->data_array2->delay_row_decoder * 1e9 << endl;
io.cc:          fr->data_array2->delay_matchlines * 1e9 << endl;
io.cc:      fr->data_array2->delay_bitlines/1e-9 << endl;
io.cc:      fr->data_array2->delay_sense_amp * 1e9 << endl;
io.cc:      fr->data_array2->delay_subarray_output_driver * 1e9 +
io.cc:      fr->data_array2->delay_dout_htree * 1e9 << endl;
io.cc:    	      fr->data_array2->power.readOp.dynamic * 1e9 << endl;
io.cc:    	        (fr->data_array2->power_addr_input_htree.readOp.dynamic +
io.cc:    	         fr->data_array2->power_data_output_htree.readOp.dynamic +
io.cc:    	         fr->data_array2->power_routing_to_bank.readOp.dynamic) * 1e9 << endl;
io.cc:    	   fr->data_array2->power_data_output_htree.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_row_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_row_predecoder_blocks.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_row_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_bit_mux_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_bit_mux_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_bit_mux_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_1_decoders.readOp.dynamic * 1e9  +
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	   fr->data_array2->power_senseamp_mux_lev_2_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	    	   fr->data_array2->power_prechg_eq_drivers.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_bitlines.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_sense_amps.readOp.dynamic * 1e9 << endl;
io.cc:    	   fr->data_array2->power_output_drivers_at_subarray.readOp.dynamic * 1e9 << endl;
io.cc:    	        fr->data_array2->power.readOp.leakage * 1e3 << endl;
io.cc:    	        (fr->data_array2->power_addr_input_htree.readOp.leakage +
io.cc:    	         fr->data_array2->power_data_output_htree.readOp.leakage +
io.cc:    	         fr->data_array2->power_routing_to_bank.readOp.leakage) * 1e3 << endl;
io.cc:    	        (fr->data_array2->array_leakage) * 1e3 << endl;
io.cc:    	        (fr->data_array2->wl_leakage) * 1e3 << endl;
io.cc:    	        (fr->data_array2->cl_leakage) * 1e3 << endl;
io.cc:    	        (fr->data_array2->power_addr_input_htree.readOp.gate_leakage +
io.cc:    	         fr->data_array2->power_data_output_htree.readOp.gate_leakage +
io.cc:    	         fr->data_array2->power_routing_to_bank.readOp.gate_leakage) * 1e3 << endl;
io.cc:                      fr->data_array2->power.searchOp.dynamic * 1e9 << endl;
io.cc:    	              (fr->data_array2->power_htree_in_search.searchOp.dynamic +
io.cc:    	               fr->data_array2->power_htree_out_search.searchOp.dynamic +
io.cc:    	               fr->data_array2->power_routing_to_bank.searchOp.dynamic) * 1e9 << endl;
io.cc:    	              (fr->data_array2->power_htree_in_search.searchOp.dynamic +
io.cc:    	       	               fr->data_array2->power_htree_out_search.searchOp.dynamic) * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_searchline.searchOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_searchline_precharge.searchOp.dynamic * 1e9 << endl;
io.cc:    	               fr->data_array2->power_matchlines.searchOp.dynamic * 1e9 +
io.cc:    	        	   fr->data_array2->power_matchline_precharge.searchOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_output_drivers_at_subarray.searchOp.dynamic * 1e9 << endl;
io.cc:            	      fr->data_array2->power.readOp.dynamic * 1e9 << endl;
io.cc:    	              (fr->data_array2->power_addr_input_htree.readOp.dynamic +
io.cc:    	               fr->data_array2->power_data_output_htree.readOp.dynamic +
io.cc:    	               fr->data_array2->power_routing_to_bank.readOp.dynamic) * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_data_output_htree.readOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_row_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_row_predecoder_blocks.readOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_row_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_bit_mux_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_bit_mux_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	           	   fr->data_array2->power_bit_mux_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	         	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_senseamp_mux_lev_1_decoders.readOp.dynamic * 1e9  +
io.cc:    	           	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:    	           	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_senseamp_mux_lev_2_decoders.readOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_bitlines.readOp.dynamic * 1e9 +
io.cc:    	          	   fr->data_array2->power_prechg_eq_drivers.readOp.dynamic * 1e9<< endl;
io.cc:    	          	   fr->data_array2->power_sense_amps.readOp.dynamic * 1e9 << endl;
io.cc:    	          	   fr->data_array2->power_output_drivers_at_subarray.readOp.dynamic * 1e9 << endl;
io.cc:                      fr->data_array2->power.readOp.leakage * 1e3 << endl;
io.cc:                  fr->data_array2->power.searchOp.dynamic * 1e9 << endl;
io.cc:	              (fr->data_array2->power_htree_in_search.searchOp.dynamic +
io.cc:	               fr->data_array2->power_htree_out_search.searchOp.dynamic +
io.cc:	               fr->data_array2->power_routing_to_bank.searchOp.dynamic) * 1e9 << endl;
io.cc:	              (fr->data_array2->power_htree_in_search.searchOp.dynamic +
io.cc:	       	               fr->data_array2->power_htree_out_search.searchOp.dynamic) * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_searchline.searchOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_searchline_precharge.searchOp.dynamic * 1e9 << endl;
io.cc:	               fr->data_array2->power_matchlines.searchOp.dynamic * 1e9 +
io.cc:	        	   fr->data_array2->power_matchline_precharge.searchOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_matchline_to_wordline_drv.searchOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_bitlines.searchOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_prechg_eq_drivers.searchOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_sense_amps.searchOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_output_drivers_at_subarray.searchOp.dynamic * 1e9 << endl;
io.cc:        	      fr->data_array2->power.readOp.dynamic * 1e9 << endl;
io.cc:	              (fr->data_array2->power_addr_input_htree.readOp.dynamic +
io.cc:	               fr->data_array2->power_data_output_htree.readOp.dynamic +
io.cc:	               fr->data_array2->power_routing_to_bank.readOp.dynamic) * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_data_output_htree.readOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_row_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_row_predecoder_blocks.readOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_row_decoders.readOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_bit_mux_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_bit_mux_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:	           	   fr->data_array2->power_bit_mux_decoders.readOp.dynamic * 1e9 << endl;
io.cc:	         	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_senseamp_mux_lev_1_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_senseamp_mux_lev_1_decoders.readOp.dynamic * 1e9  +
io.cc:	           	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_drivers.readOp.dynamic * 1e9 +
io.cc:	           	   fr->data_array2->power_senseamp_mux_lev_2_predecoder_blocks.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_senseamp_mux_lev_2_decoders.readOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_bitlines.readOp.dynamic * 1e9 +
io.cc:	          	   fr->data_array2->power_prechg_eq_drivers.readOp.dynamic * 1e9<< endl;
io.cc:	          	   fr->data_array2->power_sense_amps.readOp.dynamic * 1e9 << endl;
io.cc:	          	   fr->data_array2->power_output_drivers_at_subarray.readOp.dynamic * 1e9 << endl;
io.cc:                  fr->data_array2->power.readOp.leakage * 1e3 << endl;
io.cc:    	cout <<  "  Data array: Area (mm2): " << fr->data_array2->area * 1e-6 << endl;
io.cc:    	cout <<  "  CAM array: Area (mm2): " << fr->data_array2->area * 1e-6 << endl;
io.cc:    	cout <<  "  Fully associative cache array: Area (mm2): " << fr->data_array2->area * 1e-6 << endl;
io.cc:      fr->data_array2->all_banks_height*1e-3 << endl;
io.cc:      fr->data_array2->all_banks_width*1e-3 << endl;
io.cc:        fr->data_array2->area_efficiency << " %" << endl;
io.cc:        fr->data_array2->mat_height*1e-3 << endl;
io.cc:        fr->data_array2->mat_length*1e-3 << endl;
io.cc:        fr->data_array2->subarray_height*1e-3 << endl;
io.cc:        fr->data_array2->subarray_length*1e-3 << endl;
main.cc://  delete result.data_array2;
nuca.cc:    ures.data_array2 = &data;
